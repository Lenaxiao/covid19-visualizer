{"version":3,"sources":["components/cards/Cards.module.css","components/cards/Cards.js","api/index.js","components/chart/Chart.js","components/picker/Picker.js","App.js","index.js","App.module.css","components/chart/Chart.module.css","components/picker/Picker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","info","name","style","infected","value","className","container","Grid","spacing","justify","map","cc","i","key","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url","fetchData","country","a","flexibleUrl","axios","get","fetchDailyData","newData","d","total","date","reportDate","fetchCountries","countries","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","styles","labels","datasets","lebel","backgroundColor","option","legend","display","title","text","length","label","borderColor","fill","Picker","handleCountryChange","setCountries","getCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","countryInfo","setState","res","this","src","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66c058d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2rcre\",\"card\":\"Cards_card__1N7pj\",\"infected\":\"Cards_infected__wcxcq\",\"recovered\":\"Cards_recovered__3R3u8\",\"deaths\":\"Cards_deaths__2xaEy\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport style from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  const info = [\n    {\n      name: \"Infected\",\n      style: style.infected,\n      data: confirmed.value\n    },\n    {\n      name: \"Recovered\",\n      style: style.recovered,\n      data: recovered.value\n    },\n    {\n      name: \"Deaths\",\n      style: style.deaths,\n      data: deaths.value\n    }\n  ];\n  return (\n    <div className={style.container}>\n      <Grid container spacing={3} justify=\"center\">\n        {info.map((cc, i) => (\n          <Grid\n            key={i}\n            item\n            component={Card}\n            xs={12}\n            md={3}\n            className={cx(style.card, cc.style)}\n          >\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                {cc.name}\n              </Typography>\n              <Typography variant=\"h5\">\n                <CountUp\n                  start={0}\n                  end={cc.data}\n                  duration={2}\n                  separator=\",\"\n                ></CountUp>\n              </Typography>\n              <Typography color=\"textSecondary\">\n                {new Date(lastUpdate).toDateString()}\n              </Typography>\n              <Typography variant=\"body2\">\n                number of active cases of COVID-19\n              </Typography>\n            </CardContent>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async country => {\n  let flexibleUrl = url;\n  if (country) {\n    flexibleUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate }\n    } = await axios.get(flexibleUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {}\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const newData = data.map(d => ({\n      confirmed: d.confirmed.total,\n      deaths: d.deaths.total,\n      date: d.reportDate\n    }));\n    return newData;\n  } catch (error) {}\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {}\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n\n  const lineChart = () =>\n    dailyData.length > 0 ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [\n            {\n              data: dailyData.map(({ confirmed }) => confirmed),\n              label: \"Infected\",\n              borderColor: \"rgba(0, 0, 255, 0.5)\",\n              fill: true\n            },\n            {\n              data: dailyData.map(({ deaths }) => deaths),\n              label: \"Death\",\n              borderColor: \"rgba(255, 0, 0, 0.5)\",\n              fill: true\n            }\n          ]\n        }}\n      />\n    ) : null;\n\n  const barChart = () =>\n    confirmed ? (\n      <Bar\n        data={{\n          labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n          datasets: [\n            {\n              lebel: \"People\",\n              data: [confirmed.value, recovered.value, deaths.value],\n              backgroundColor: [\n                \"rgba(0, 0, 255, 0.5)\",\n                \"rgba(0, 255, 0, 0.5)\",\n                \"rgba(255, 0, 0, 0.5)\"\n              ]\n            }\n          ]\n        }}\n        option={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` }\n        }}\n      />\n    ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart() : lineChart()}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./Picker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst Picker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const getCountries = async () => {\n      setCountries(await fetchCountries());\n    };\n    getCountries();\n  }, [setCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={e => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => (\n          <option value={country} key={i}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Picker;\n","import React from \"react\";\nimport { Cards, Chart, Picker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\n\nimport image from \"./images/image.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\"\n  };\n\n  async componentDidMount() {\n    const res = await fetchData();\n    this.setState({ data: res });\n  }\n\n  handleCountryChange = async country => {\n    const countryInfo = await fetchData(country);\n    this.setState({ data: countryInfo, country: country });\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <img src={image} alt=\"covid-19\" className={styles.image} />\n        <Cards data={this.state.data} />\n        <Picker handleCountryChange={this.handleCountryChange} />\n        <Chart data={this.state.data} country={this.state.country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Qe1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Picker_formControl__8OB8v\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}